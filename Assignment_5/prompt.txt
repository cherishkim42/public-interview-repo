Assignment 5
Fully solve at least two of the below linked lists problems in real working code. Use your idea sketches and pseudocode from class, type it in your code editor, run some test cases, and debug your code so it works correctly. Implement at least one solution for 2 or more of the problems below.


Given a singly-linked list, find the middle value in the list.
Example: If the given linked list is A → B → C → D → E, return C.
Assumptions: The length (n) is odd so the linked list has a definite middle.


Given a singly-linked list, reverse the order of the list by modifying the nodes’ links.
Example: If the given linked list is A → B → C → D → E, nodes should be modified/rearranged so the list becomes E → D → C → B → A.


Given a singly-linked list, rearrange the nodes by interleaving the first half of the linked list with the second half.
Example: If the given linked list is A → B → C → D → E → F → G → H, nodes should be rearranged so the list becomes A → C → E → G → B → D → F → H.


Rotate a given singly-linked list counter-clockwise by k nodes, where k is a given integer.
Example: If the given linked list is A → B → C → D → E → F and k is 4, nodes should be modified so the list becomes E → F → A → B → C → D.


Assumptions: k is positive and smaller than n, the length of the linked list.
Given an array of k singly-linked lists, each of whose values are in sorted order, combine all nodes (do not create new nodes) into one singly-linked list with all values in order.
